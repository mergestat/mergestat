version: "3.6"
services:
  postgres:
    image: postgres:12
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password

  worker:
    build:
      context: .
    stop_grace_period: 10m
    restart: always
    depends_on:
      - postgres
    environment:
      POSTGRES_CONNECTION: postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      GITHUB_RATE_LIMIT: 1/2
      ENCRYPTION_SECRET: password
      LOG_LEVEL: debug
      PRETTY_LOGS: 1
      GITHUB_WORKFLOW_PER_PAGE: 30
      GITHUB_WORKFLOW_RUNS_PER_PAGE: 30
      GITHUB_WORKFLOW_JOBS_PER_PAGE: 30
    ports:
      - 3301:8080

  graphql:
    restart: always
    build:
      context: ./graphql
    depends_on:
      - postgres
      - worker # this is to ensure all migrations are run before the API starts up
    ports:
      - 5433:5433
    command:
      - "--connection"
      - "postgres://postgres:password@postgres:5432/postgres?sslmode=disable"
      - "--port"
      - "5433"
      - "--schema"
      - "mergestat,public"
      - "--append-plugins"
      - "@graphile-contrib/pg-simplify-inflector,postgraphile-plugin-connection-filter,/graphql/exec-sql/index.js,/graphql/service-credentials/index.js"
      - "-o"
      - "--subscriptions"
      - "--retry-on-init-fail"
      - "--dynamic-json"
      - "--no-setof-functions-contain-nulls"
      - "--no-ignore-rbac"
      - "--extended-errors=errcode"
      - "--disable-graphiql"
      - "--enable-query-batching"
      - "--disable-query-log"
      - "--legacy-relations=omit"
      - "--jwt-secret=secret"
      - "--default-role=mergestat_anonymous"
    environment:
      ENCRYPTION_SECRET: password
      DISPLAY_PG_HOSTNAME: localhost
      DISPLAY_PG_PORT: 5432
      DISPLAY_PG_DATABASE: postgres
      DISPLAY_PG_USER: postgres

  ui:
    restart: always
    build:
      context: ./ui
    depends_on:
      - graphql
    ports:
      - 3300:3000
    environment:
      POSTGRAPHILE_API: http://graphql:5433/graphql
      POSTGRES_CONNECTION: postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      JWT_SECRET: secret # should match - "--jwt-secret=secret" flag in graphql service
    labels:
      shipyard.route: '/'

  grafana:
    image: grafana/grafana-oss:latest
    user: root
    environment:
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: password
      PGDATABASE: postgres
    ports:
      - 3000:3000
    depends_on:
      - postgres
    restart: always
    volumes:
      - grafana_lib:/var/lib/grafana
      - grafana_etc:/etc/grafana
      - grafana_log:/var/log/grafana
      - ./scripts/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./scripts/grafana/provisioning:/etc/grafana/provisioning
      - ./examples:/var/lib/examples
      - /var/lib/grafana/dashboards/
    entrypoint: [ "bash" ]
    command: > # This is to set the datasource id in the examples to the datasource created for local grafana
      -cx 'cp -r /var/lib/examples/* /var/lib/grafana/dashboards/ && find /var/lib/grafana/dashboards/ -name ''*.json'' | xargs grep -rnl "$${DS_POSTGRES}" | xargs -i@ sed -i "s/\$${DS_POSTGRES}/SXQZgpP7z/g" @ && exec grafana-server --config="/etc/grafana/grafana.ini"'

volumes:
  db_data:
  grafana_lib:
  grafana_etc:
  grafana_log:
